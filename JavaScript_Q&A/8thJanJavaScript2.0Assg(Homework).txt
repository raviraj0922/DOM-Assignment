JavaScript Questions:-

01. Create a variable.js file and declare variables and assign string, boolean, undefined and null data types, Display all the value with their data type.

Ans:
**********************Code**********************
// Declaring variables with different data types
const name = "Ravi"; // String
const isAwesome = true; // Boolean
let notDefined; // Undefined
const emptyValue = null; // Null

// Displaying the values and data types
console.log("Name:", name, typeof name);
console.log("Is awesome?", isAwesome, typeof isAwesome);
console.log("Not defined:", notDefined, typeof notDefined);
console.log("Empty value:", emptyValue, typeof emptyValue);
**********************Code**********************

This code will create the following output:
Name: Bard string
Is awesome? true boolean
Not defined: undefined undefined
Empty value: null object

Explanation:

const name = "Ravi"; declares a constant variable named name with the value "Ravi". It uses the string data type.
const isAwesome = true; declares a constant variable named isAwesome with the value true. It uses the boolean data type.
let notDefined; declares a variable named notDefined without assigning any value. This variable will be of the undefined data type.
const emptyValue = null; declares a constant variable named emptyValue with the value null. It uses the null data type.
console.log("Name:", name, typeof name); This line displays the value of the name variable and its data type.
console.log("Is awesome?", isAwesome, typeof isAwesome); This line displays the value of the isAwesome variable and its data type.
console.log("Not defined:", notDefined, typeof notDefined); This line displays the value of the notDefined variable and its data type.
console.log("Empty value:", emptyValue, typeof emptyValue); This line displays the value of the emptyValue variable and its data type.

02. Declare variables to store your first name, last name, marital status, country and age and display them using interploation method.

Ans:-
**********************Code**********************
// Declare variables
const firstName = "Ravi";
const lastName = "Raj";
const maritalStatus = "Married";
const country = "India";
const age = 32;

// Display using interpolation method
console.log(`My name is ${firstName} ${lastName}. I am ${age} years old and ${maritalStatus}. I live in ${country}.`);
**********************Code**********************
This code will print the following output:

My name is Ravi Raj. I am 32 years old and Married. I live in India.

03. Declare a varibale and assign string value to it and change all the string characters to capital letters using toUpperCase() method.

Ans:-
**********************Code**********************
// Declare a variable and assign a string value
const message = "hello world!";

// Convert the string to uppercase using toUpperCase() method
const uppercaseMessage = message.toUpperCase();

// Display the original and uppercase text
console.log("Original message:", message);
console.log("Uppercase message:", uppercaseMessage);
**********************Code**********************
This code will output the following:

Original message: hello world!
Uppercase message: HELLO WORLD!

04. Declare a varibale and assign string value to it and check if the string contains a word Script using includes() method.

Ans:-
**********************Code**********************
// Declare a variable and assign a string value
const text = "This script written for a game.";

// Check if the string contains the word "Script" using includes() method
const containsScript = text.includes("Script");

// Display the result
console.log(`The text contains the word 'Script': ${containsScript}`);
**********************Code**********************
This code will output the following:

The text contains the word 'Script': true

05. Declare a varibale and assign string value to it and then split it into an array using split() method

Ans:-
**********************Code**********************
// Declare a variable and assign a string value
const text = "I love to play games online.";

// Split the string into an array using split() method
const words = text.split();
// const words = text.split(",");

// Display the splitted words
console.log("Splitted words:", words);
**********************Code**********************

This code will output the following:

Splitted words: ["I", "love", "to", "play", "games", "online."]

06. 'Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon' split the string at the comma and change it to an array.

Ans:-
**********************Code**********************
const companiesString = "Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon";

// Split the string at the comma and convert it to an array
const companiesArray = companiesString.split(", ");

// Print the array
console.log(companiesArray);
**********************Code**********************
This code will output the following:

["Facebook", "Google", "Microsoft", "Apple", "IBM", "Oracle", "Amazon"]

07. Declare an array containing the multiple values and use lastIndexOf to determine the position of the first and last occurrence of a word "pw skills".

Ans:-
**********************Code**********************
// Declare an array with multiple values
let myArray = ["programming", "web development", "pw skills", "JavaScript", "pw skills", "coding"];

// Use lastIndexOf to find the position of the last occurrence of "pw skills"
let lastIndexOfPwSkills = myArray.lastIndexOf("pw skills");

// Use indexOf to find the position of the first occurrence of "pw skills"
let firstIndexOfPwSkills = myArray.indexOf("pw skills");

// Log the results
console.log("First occurrence of 'pw skills' is at index:", firstIndexOfPwSkills);
console.log("Last occurrence of 'pw skills' is at index:", lastIndexOfPwSkills);
**********************Code**********************
This code outputs the following:

First occurrence of "pw skills": 2
Last occurrence of "pw skills": 4

08. Demonstrate the use of trim() to remove any trailing whitespace at the beginning and the end of a string.

Ans:-
**********************Code**********************
// Original string with leading and trailing whitespaces
let originalString = "   Hello, this is a string with spaces.   ";

// Using trim to remove leading and trailing whitespaces
let trimmedString = originalString.trim();

// Displaying the results
console.log("Original String:", `"${originalString}"`);
console.log("Trimmed String:", `"${trimmedString}"`);
**********************Code**********************
This code outputs the following:

Original String: "   Hello, this is a string with spaces.   "
Trimmed String: "Hello, this is a string with spaces."

09. Boolean value is either true or false.
    - Write three JavaScript statement example which provide truthy value.
    - Write three JavaScript statement example which provide falsy value.

    Ans1:(a:- "Hello World!" // Any non-empty string is truthy.
          b:- [] // An empty array is still considered truthy.
          c:- { name: "Bard" } // An object with properties is truthy.)
    Ans2:(a:- '' // An empty string is falsy.
          b:- 0 // The number zero is falsy.
          c:- null // The keyword "null" is falsy.)

10. Figure out the result of the following comparison expression first without using console.log(). After you decide the result confirm it using console.log()
    - 4 > 3
    - 4 >= 3
    - 4 < 3
    - 4 <= 3
    - 4 == 4
    - 4 === 4
    - 4 != 4
    - 4 !== 4
    - 4 != '4'
    - 4 == '4'
    - 4 === '4'
    - Find the length of python and jargon and make a falsy comparison statement.
Ans:-
Comparison Expression Results:
1. 4 > 3: True
2. 4 >= 3: True
3. 4 < 3: False
4. 4 <= 3: False
5. 4 == 4: True
6. 4 === 4: True
7. 4 != 4: False
8. 4 !== 4: False
9. 4 != '4': False
10. 4 == '4': True
11. 4 === '4': False

**********************Code**********************
console.log(4 > 3);       // true
console.log(4 >= 3);      // true
console.log(4 < 3);       // false
console.log(4 <= 3);      // false
console.log(4 == 4);      // true
console.log(4 === 4);     // true
console.log(4 != 4);      // false
console.log(4 !== 4);     // false
console.log(4 != '4');    // false
console.log(4 == '4');    // true
console.log(4 === '4');   // false

// Find the length of 'python' and 'jargon' and make a falsy comparison statement
let pythonLength = 'python'.length;
let jargonLength = 'jargon'.length;

console.log(pythonLength !== jargonLength);  // true
**********************Code**********************

11. Use the Date object to do the following activities
    - What is the year today?
    - What is the month today as a number?
    - What is the date today?
    - What is the day today as a number?
    - What is the hours now?
    - What is the minutes now?
    - Find out the numbers of seconds elapsed from January 1, 1970 to now.
Ans:-
**********************Code**********************
// Create a new Date object
let today = new Date();

// What is the year today?
let year = today.getFullYear();

// What is the month today as a number? (Note: Months are zero-based, so January is 0 and December is 11)
let month = today.getMonth() + 1; // Adding 1 to convert to the human-readable format (1-12)

// What is the date today?
let date = today.getDate();

// What is the day today as a number? (0: Sunday, 1: Monday, ..., 6: Saturday)
let day = today.getDay();

// What is the hours now?
let hours = today.getHours();

// What is the minutes now?
let minutes = today.getMinutes();

// Find out the number of seconds elapsed from January 1, 1970, to now (timestamp)
let secondsElapsed = Math.floor(today.getTime() / 1000);

// Output the results
console.log("Year:", year);
console.log("Month:", month);
console.log("Date:", date);
console.log("Day:", day);
console.log("Hours:", hours);
console.log("Minutes:", minutes);
console.log("Seconds elapsed since January 1, 1970:", secondsElapsed);
**********************Code**********************
This code will output the following information:

Today's year: 2023
Month as a number: 12
Current date: 11
Day as a number (0-6): 0
Current hours: 7
Current minutes: 5
Current seconds: 36
Seconds since January 1, 1970: 1702278356

12. Create a human readable time format using the Date time object
    - YYYY-MM-DD HH:mm
    - DD-MM-YYYY HH:mm
    - DD/MM/YYYY HH:mm
Ans:-
**********************Code**********************
// Create a new Date object
let today = new Date();

// Function to add leading zero if needed
function addLeadingZero(number) {
    return number < 10 ? `0${number}` : number;
}

// Format: YYYY-MM-DD HH:mm
let formattedDate1 = `${today.getFullYear()}-${addLeadingZero(today.getMonth() + 1)}-${addLeadingZero(today.getDate())} ${addLeadingZero(today.getHours())}:${addLeadingZero(today.getMinutes())}`;

// Format: DD-MM-YYYY HH:mm
let formattedDate2 = `${addLeadingZero(today.getDate())}-${addLeadingZero(today.getMonth() + 1)}-${today.getFullYear()} ${addLeadingZero(today.getHours())}:${addLeadingZero(today.getMinutes())}`;

// Format: DD/MM/YYYY HH:mm
let formattedDate3 = `${addLeadingZero(today.getDate())}/${addLeadingZero(today.getMonth() + 1)}/${today.getFullYear()} ${addLeadingZero(today.getHours())}:${addLeadingZero(today.getMinutes())}`;

// Output the results
console.log("Formatted Date (YYYY-MM-DD HH:mm):", formattedDate1);
console.log("Formatted Date (DD-MM-YYYY HH:mm):", formattedDate2);
console.log("Formatted Date (DD/MM/YYYY HH:mm):", formattedDate3);
**********************Code**********************

This code will output the following human-readable time formats:

YYYY-MM-DD HH:mm: 2023-12-11 07:05
DD-MM-YYYY HH:mm: 11-12-2023 07:05
DD/MM/YYYY HH:mm: 11/12/2023 07:05

13. Get user input using prompt(“Enter your age:”). If user is 18 or older , give feedback:'You are old enough to drive' but if not 18 give another feedback stating to wait for the number of years he needs to turn 18.

Ans:-
**********************Code**********************
// Get user input for age
let userInput = prompt("Enter your age:");

// Convert user input to a number
let userAge = parseInt(userInput);

// Check if the user is 18 or older
if (userAge >= 18) {
    alert("You are old enough to drive!");
} else {
    // Calculate the number of years the user needs to turn 18
    let yearsToWait = 18 - userAge;
    alert(`Sorry, you are not old enough to drive. Please wait for ${yearsToWait} more years.`);
}
**********************Code**********************
User enters "17":
> Enter your age: 17
Sorry, you are not old enough to drive. Please wait for 1 more years.

User enters "24":
> Enter your age: 24
You are old enough to drive.

14. Even numbers are divisible by 2 and the remainder is zero. How do you check, if a number is even or not using JavaScript? Create a program which checks that the given number is even or odd.

Ans:-
**********************Code**********************
// Get user input for a number
let userInput = prompt("Enter a number:");

// Convert user input to a number
let number = parseInt(userInput);

// Check if the number is even or odd
if (number % 2 === 0) {
    alert(`${number} is an even number.`);
} else {
    alert(`${number} is an odd number.`);
}
**********************Code**********************
// Example usage
number(10); // Output: 10 is even.
number(7); // Output: 7 is odd.

15. Write a program which can give grades to students according to theirs scores:
    - 80-100, A
    - 70-89, B
    - 60-69, C
    - 50-59, D
    - 0-49, F
Ans:-
**********************Code**********************
// Get user input for the student's score
let userInput = prompt("Enter the student's score:");

// Convert user input to a number
let score = parseInt(userInput);

// Determine the grade based on the score range
let grade;

if (score >= 80 && score <= 100) {
    grade = 'A';
} else if (score >= 70 && score < 80) {
    grade = 'B';
} else if (score >= 60 && score < 70) {
    grade = 'C';
} else if (score >= 50 && score < 60) {
    grade = 'D';
} else if (score >= 0 && score < 50) {
    grade = 'F';
} else {
    grade = 'Invalid score. Please enter a score between 0 and 100.';
}

// Display the result
alert(`The student's score is ${score}, and the grade is ${grade}`);
**********************Code**********************

16. Check if the season is Autumn, Winter, Spring or Summer. If the user input is :
    - September, October or November, the season is Autumn.
    - December, January or February, the season is Winter.
    - March, April or May, the season is Spring
    - June, July or August, the season is Summer
Ans:-
**********************Code**********************
// Get user input for the month
let userInput = prompt("Enter the name of the month:");

// Convert user input to lowercase for case-insensitive comparison
let month = userInput.toLowerCase();

// Determine the season based on the month
let season;

switch (month) {
    case 'september':
    case 'october':
    case 'november':
        season = 'Autumn';
        break;
    case 'december':
    case 'january':
    case 'february':
        season = 'Winter';
        break;
    case 'march':
    case 'april':
    case 'may':
        season = 'Spring';
        break;
    case 'june':
    case 'july':
    case 'august':
        season = 'Summer';
        break;
    default:
        season = 'Invalid month. Please enter a valid month.';
}

// Display the result
alert(`The month is ${month}, and the season is ${season}`);
**********************Code**********************

17. Write a program which tells the number of days in a month.

Ans:-
**********************Code**********************
// Get user input for the month
let userInput = prompt("Enter the name of the month:");

// Convert user input to lowercase for case-insensitive comparison
let month = userInput.toLowerCase();

// Define the number of days for each month
let daysInMonth;

switch (month) {
    case 'january':
    case 'march':
    case 'may':
    case 'july':
    case 'august':
    case 'october':
    case 'december':
        daysInMonth = 31;
        break;
    case 'april':
    case 'june':
    case 'september':
    case 'november':
        daysInMonth = 30;
        break;
    case 'february':
        // Check if it's a leap year to determine the number of days in February
        let yearInput = prompt("Enter the year:");
        let year = parseInt(yearInput);
        daysInMonth = (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) ? 29 : 28;
        break;
    default:
        daysInMonth = 'Invalid month. Please enter a valid month.';
}

// Display the result
alert(`The month is ${month}, and it has ${daysInMonth} days.`);
**********************Code**********************

18. Write a program which tells the number of days in a month, now consider leap year.

Ans:-
**********************Code**********************
// Get user input for the month
let userInput = prompt("Enter the name of the month:");

// Convert user input to lowercase for case-insensitive comparison
let month = userInput.toLowerCase();

// Define the number of days for each month
let daysInMonth;

switch (month) {
    case 'january':
    case 'march':
    case 'may':
    case 'july':
    case 'august':
    case 'october':
    case 'december':
        daysInMonth = 31;
        break;
    case 'april':
    case 'june':
    case 'september':
    case 'november':
        daysInMonth = 30;
        break;
    case 'february':
        // Check if it's a leap year to determine the number of days in February
        let yearInput = prompt("Enter the year:");
        let year = parseInt(yearInput);
        daysInMonth = (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) ? 29 : 28;
        break;
    default:
        daysInMonth = 'Invalid month. Please enter a valid month.';
}

// Display the result
alert(`The month is ${month}, and it has ${daysInMonth} days.`);
**********************Code**********************

19. Create a countries.js file and store the countries name into this file, create a file web_techs.js and store the popular web technology names into this file. Access both file in a third file named main.js

Ans:-
**********************Code**********************
// countries.js
const countries = ['Afghanistan', 'Brazil', 'Canada', 'Germany', 'India', 'Japan', 'United States', 'United Kingdom'];

// Export the countries array
module.exports = countries;
**********************Code**********************
// web_techs.js
const webTechs = ['HTML', 'CSS', 'JavaScript', 'React', 'Node.js', 'Vue.js', 'Angular', 'Python', 'Django'];

// Export the webTechs array
module.exports = webTechs;
**********************Code**********************
// main.js
const countries = require('./countries');
const webTechs = require('./web_techs');

// Display the contents of countries array
console.log('Countries:', countries);

// Display the contents of webTechs array
console.log('Web Technologies:', webTechs);
**********************Code**********************

20. In the following shopping cart add, remove, edit items
    => const shoppingCart = ['Milk', 'Coffee', 'Tea', 'Honey']
    - add 'Meat' in the beginning of your shopping cart if it has not been already added
    - add Sugar at the end of your shopping cart if it has not been already added
    - remove 'Honey'
    - modify Tea to 'Green Tea'
Ans:-
**********************Code**********************
const shoppingCart = ['Milk', 'Coffee', 'Tea', 'Honey'];

// Add 'Meat' to the beginning if it's not already added
if (!shoppingCart.includes('Meat')) {
    shoppingCart.unshift('Meat');
}

// Add 'Sugar' to the end if it's not already added
if (!shoppingCart.includes('Sugar')) {
    shoppingCart.push('Sugar');
}

// Remove 'Honey'
const indexOfHoney = shoppingCart.indexOf('Honey');
if (indexOfHoney !== -1) {
    shoppingCart.splice(indexOfHoney, 1);
}

// Modify 'Tea' to 'Green Tea'
const indexOfTea = shoppingCart.indexOf('Tea');
if (indexOfTea !== -1) {
    shoppingCart[indexOfTea] = 'Green Tea';
}

// Display the updated shopping cart
console.log('Updated Shopping Cart:', shoppingCart);
**********************Code**********************

21. In countries array check if 'Ethiopia' exists in the array if it exists print 'ETHIOPIA'. If it does not exist add to the countries list.

Ans:-
**********************Code**********************
const countries = ['Afghanistan', 'Brazil', 'Canada', 'Germany', 'India', 'Japan', 'United States', 'United Kingdom'];

// Check if 'Ethiopia' exists in the array
const indexOfEthiopia = countries.indexOf('Ethiopia');

if (indexOfEthiopia !== -1) {
    // 'Ethiopia' exists in the array
    console.log('ETHIOPIA');
} else {
    // 'Ethiopia' does not exist, add it to the array
    countries.push('Ethiopia');
    console.log('Ethiopia added to the countries list.');
}

// Display the updated countries array
console.log('Updated Countries:', countries);
**********************Code**********************

22. The following is an array of 10 students ages:
    => const ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24]
    - Sort the array and find the min and max age
    - Find the median age(one middle item or two middle items divided by two)
    - Find the average age(all items divided by number of items)
    - Find the range of the ages(max minus min)
    - Compare the value of (min - average) and (max - average), use abs() method
Ans:-
**********************Code**********************
const ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24];

// Sort the array
const sortedAges = ages.slice().sort((a, b) => a - b);

// Find the min and max age
const minAge = sortedAges[0];
const maxAge = sortedAges[sortedAges.length - 1];

// Find the median age
const middleIndex = Math.floor(sortedAges.length / 2);
const medianAge = sortedAges.length % 2 === 0
    ? (sortedAges[middleIndex - 1] + sortedAges[middleIndex]) / 2
    : sortedAges[middleIndex];

// Find the average age
const sumAges = sortedAges.reduce((acc, age) => acc + age, 0);
const averageAge = sumAges / sortedAges.length;

// Find the range of ages
const range = maxAge - minAge;

// Compare the value of (min - average) and (max - average)
const minAverageDiff = Math.abs(minAge - averageAge);
const maxAverageDiff = Math.abs(maxAge - averageAge);

// Display the results
console.log('Sorted Ages:', sortedAges);
console.log('Min Age:', minAge);
console.log('Max Age:', maxAge);
console.log('Median Age:', medianAge);
console.log('Average Age:', averageAge);
console.log('Range of Ages:', range);
console.log('Difference (Min - Average):', minAverageDiff);
console.log('Difference (Max - Average):', maxAverageDiff);
**********************Code**********************

23. Write a program to check that the number given by the user is a prime number or not.
Ans:-
**********************Code**********************
// Get user input for a number
let userInput = prompt("Enter a number:");

// Convert user input to a number
let number = parseInt(userInput);

// Function to check if a number is prime
function isPrime(num) {
    if (num <= 1) {
        return false;
    }
    for (let i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) {
            return false;
        }
    }
    return true;
}

// Check if the entered number is prime
if (isPrime(number)) {
    console.log(`${number} is a prime number.`);
} else {
    console.log(`${number} is not a prime number.`);
}
**********************Code**********************

24. Write a program to create two array "even" and "odd" having even and odd number between the 0 to 100 (0 and 100 included).
Ans:-
**********************Code**********************
// Initialize arrays
let even = [];
let odd = [];

// Populate the arrays with even and odd numbers
for (let i = 0; i <= 100; i++) {
    if (i % 2 === 0) {
        even.push(i);
    } else {
        odd.push(i);
    }
}

// Display the arrays
console.log('Even Numbers:', even);
console.log('Odd Numbers:', odd);
**********************Code**********************

25. Body mass index(BMI) is calculated as follows: bmi = weight in Kg / (height x height) in m2. Write a function which calculates bmi. BMI is used to broadly define different weight groups in adults 20 years old or older.Check if a person is underweight, normal, overweight or obese based the information given below.
    - The same groups apply to both men and women.
    - Underweight: BMI is less than 18.5
    - Normal weight: BMI is 18.5 to 24.9
    - Overweight: BMI is 25 to 29.9
    - Obese: BMI is 30 or more
Ans:-
**********************Code**********************
function calculateBMI(weight, height) {
    // Convert height from centimeters to meters
    const heightInMeters = height / 100;

    // Calculate BMI
    const bmi = weight / (heightInMeters * heightInMeters);

    // Categorize BMI
    if (bmi < 18.5) {
        return "Underweight";
    } else if (bmi >= 18.5 && bmi <= 24.9) {
        return "Normal weight";
    } else if (bmi >= 25 && bmi <= 29.9) {
        return "Overweight";
    } else {
        return "Obese";
    }
}

// Example usage:
const weight = 70; // in kilograms
const height = 175; // in centimeters

const result = calculateBMI(weight, height);
console.log(`BMI Result: ${result}`);
**********************Code**********************

26. Write a program to print the table of any number given by the user. The format of the output should be smiliar to the below example-
	If the number given by the user is 2 then the output should look like this-
	2 * 1 = 2
	2 * 2 = 4
	2 * 3 = 6 and so on till 2 * 10 = 20.
Ans:-
**********************Code**********************
// Get user input for a number
let userInput = prompt("Enter a number:");

// Convert user input to a number
let number = parseInt(userInput);

// Check if the input is a valid number
if (isNaN(number)) {
    console.log("Invalid input. Please enter a valid number.");
} else {
    // Print the multiplication table
    console.log(`Multiplication Table for ${number}:`);
    for (let i = 1; i <= 10; i++) {
        console.log(`${number} * ${i} = ${number * i}`);
    }
}
**********************Code**********************

27. Write a program to print all the prime number between 0 to 100 (0 and 100 included).

Ans:-
**********************Code**********************
function isPrime(num) {
    if (num <= 1) {
        return false;
    }
    for (let i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) {
            return false;
        }
    }
    return true;
}

console.log('Prime Numbers between 0 and 100:');
for (let i = 0; i <= 100; i++) {
    if (isPrime(i)) {
        console.log(i);
    }
}
**********************Code**********************

28. Write a program to print the given patterns using the loops-
	a. Print a triangle pattern, if the given input is 3 then the pattern should be similar to the given output
	   *
	   **
	   ***
Ans:-
**********************Code**********************
// Get user input for the number of rows
let userInput = prompt("Enter the number of rows for the triangle pattern:");

// Convert user input to a number
let numRows = parseInt(userInput);

// Check if the input is a valid number
if (isNaN(numRows) || numRows <= 0) {
    console.log("Invalid input. Please enter a valid positive number.");
} else {
    // Print the triangle pattern
    console.log("Triangle Pattern:");
    for (let i = 1; i <= numRows; i++) {
        let row = '';
        for (let j = 1; j <= i; j++) {
            row += '*';
        }
        console.log(row);
    }
}
**********************Code**********************
	b. Print a square pattern, if the input is 3 then the output should be similar to the given output
	   ***
	   ***
	   ***
Ans:-
**********************Code**********************
// Get user input for the number of rows
let userInput = prompt("Enter the number of rows for the square pattern:");

// Convert user input to a number
let numRows = parseInt(userInput);

// Check if the input is a valid number
if (isNaN(numRows) || numRows <= 0) {
    console.log("Invalid input. Please enter a valid positive number.");
} else {
    // Print the square pattern
    console.log("Square Pattern:");
    for (let i = 1; i <= numRows; i++) {
        let row = '';
        for (let j = 1; j <= numRows; j++) {
            row += '*';
        }
        console.log(row);
    }
}
**********************Code**********************
	c. Print a pyramid pattern, if the input is 3 then the output should be similar to the given output
	     *
	    ***
 	   *****
Ans:-
**********************Code**********************
// Get user input for the number of rows
let userInput = prompt("Enter the number of rows for the pyramid pattern:");

// Convert user input to a number
let numRows = parseInt(userInput);

// Check if the input is a valid number
if (isNaN(numRows) || numRows <= 0) {
    console.log("Invalid input. Please enter a valid positive number.");
} else {
    // Print the pyramid pattern
    console.log("Pyramid Pattern:");
    for (let i = 1; i <= numRows; i++) {
        let row = '';

        // Add spaces before the asterisks
        for (let j = 1; j <= numRows - i; j++) {
            row += ' ';
        }

        // Add asterisks
        for (let k = 1; k <= 2 * i - 1; k++) {
            row += '*';
        }

        console.log(row);
    }
}
**********************Code**********************

29. Write a javascript program which takes the input of filename as string and prints the extension of the file in the console.
Ans:-
**********************Code**********************
const getExtension = (filename) => {
  // Split the filename by the last "."
  const parts = filename.split('.');

  // Check if there are parts after the "."
  if (parts.length > 1) {
    // Return the last part as the extension
    return parts[parts.length - 1];
  }

  // No extension found
  return "";
};

// Get filename input from the user
const filename = prompt("Enter filename: ");

// Get and print the extension
const extension = getExtension(filename);
console.log(`The extension of "${filename}" is "${extension}".`);
**********************Code**********************

30. Create a simple calculator program in JavaScript which can perform the addition, substraction, multiplication and division on given numbers.

Ans:-
**********************Code**********************
// Function to perform addition
function add(a, b) {
    return a + b;
}

// Function to perform subtraction
function subtract(a, b) {
    return a - b;
}

// Function to perform multiplication
function multiply(a, b) {
    return a * b;
}

// Function to perform division
function divide(a, b) {
    // Check if the divisor is not zero
    if (b !== 0) {
        return a / b;
    } else {
        return "Cannot divide by zero";
    }
}

// Get user input for numbers
let num1 = parseFloat(prompt("Enter the first number:"));
let num2 = parseFloat(prompt("Enter the second number:"));

// Check if the inputs are valid numbers
if (isNaN(num1) || isNaN(num2)) {
    console.log("Invalid input. Please enter valid numbers.");
} else {
    // Perform calculations and display the results
    console.log(`Sum: ${add(num1, num2)}`);
    console.log(`Difference: ${subtract(num1, num2)}`);
    console.log(`Product: ${multiply(num1, num2)}`);
    console.log(`Quotient: ${divide(num1, num2)}`);
}
**********************Code**********************